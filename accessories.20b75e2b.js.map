{"mappings":"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","sources":["src/js/menu.js","src/js/slider.js","src/js/contact.js","src/js/contact_us2.js"],"sourcesContent":["'use strict';\n(() => {\n  const menuBtnRef = document.querySelector('[data-menu-button]');\n  const mobileMenuRef = document.querySelector('[data-menu]');\n  const body = document.body;\n  menuBtnRef.addEventListener('click', () => {\n    const expanded =\n      menuBtnRef.getAttribute('aria-expanded') === 'true' || false;\n    menuBtnRef.classList.toggle('is-open');\n    menuBtnRef.getAttribute('aria-expanded', !expanded);\n    mobileMenuRef.classList.toggle('is-open');\n    body.classList.toggle('modal-open');\n  });\n})();\n","'use strict';\n\nclass Tabs {\n  constructor({\n    rootSelector,\n    activeControlClass = 'active',\n    activePaneClass = 'active',\n    activeTab = 1,\n  }) {\n    this._refs = this._getRefs(rootSelector);\n    this._activeControlClass = activeControlClass;\n    this._activePaneClass = activePaneClass;\n    this._activeTabIdx = activeTab - 1;\n\n    this._bindEvents();\n    this._setActiveTab();\n  }\n\n  _getRefs(root) {\n    const refs = {};\n\n    refs.controls = document.querySelector(`${root} [data-controls]`);\n    refs.panes = document.querySelector(`${root} [data-panes]`);\n\n    return refs;\n  }\n\n  _bindEvents() {\n    this._refs.controls.addEventListener(\n      'click',\n      this._onControlsClick.bind(this)\n    );\n  }\n\n  _onControlsClick(event) {\n    event.preventDefault();\n\n    if (event.target.nodeName !== 'A') {\n      console.log('Кликнули не в ссылку');\n      return;\n    }\n\n    this._removeActiveTab();\n\n    const controlItem = event.target;\n    controlItem.classList.add(this._activeControlClass);\n\n    const paneId = this._getPaneId(controlItem);\n    this._setActivePane(paneId);\n  }\n\n  _setActiveTab() {\n    const controlItems = this._refs.controls.querySelectorAll('a');\n    const control = controlItems[this._activeTabIdx];\n\n    control.classList.add(this._activeControlClass);\n\n    const paneId = this._getPaneId(control);\n    this._setActivePane(paneId);\n  }\n\n  _removeActiveTab() {\n    const currentActiveControlItem = this._refs.controls.querySelector(\n      `.${this._activeControlClass}`\n    );\n\n    if (!currentActiveControlItem) {\n      return;\n    }\n\n    currentActiveControlItem.classList.remove(this._activeControlClass);\n\n    const paneId = this._getPaneId(currentActiveControlItem);\n    this._removeActivePane(paneId);\n  }\n\n  _setActivePane(paneId) {\n    const pane = this._getPaneById(paneId);\n    pane.classList.add(this._activePaneClass);\n  }\n\n  _removeActivePane(paneId) {\n    const pane = this._getPaneById(paneId);\n    pane.classList.remove(this._activePaneClass);\n  }\n\n  _getPaneId(control) {\n    return control.getAttribute('href').slice(1);\n  }\n\n  _getPaneById(id) {\n    return this._refs.panes.querySelector(`#${id}`);\n  }\n}\n\nconst tabs1 = new Tabs({\n  rootSelector: '#tabs-1',\n  activeControlClass: 'dots-item--active',\n  activePaneClass: 'swiper-slide--active',\n  activeTab: 1,\n});\n","'use strict';\n\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open-contact]'),\n    closeModalBtn: document.querySelector('[data-modal-close-contact]'),\n    modal: document.querySelector('[data-modal-contact]'),\n  };\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n    document.body.classList.toggle('modal-open');\n  }\n})();\n","'use strict';\n\n(() => {\n  const refs2 = {\n    openModalBtn2: document.querySelector('[data-modal-open-contact2]'),\n    closeModalBtn2: document.querySelector('[data-modal-close-contact2]'),\n    modal2: document.querySelector('[data-modal-contact2]'),\n  };\n  refs2.openModalBtn2.addEventListener('click', toggleModal2);\n  refs2.closeModalBtn2.addEventListener('click', toggleModal2);\n\n  function toggleModal2() {\n    refs2.modal2.classList.toggle('is-hidden');\n    document.body.classList.toggle('modal-open');\n  }\n})();\n"],"names":["menuBtnRef","document","querySelector","mobileMenuRef","body","addEventListener","expanded","getAttribute","classList","toggle","_getRefs","root","refs","controls","panes","_bindEvents","this","_refs","_onControlsClick","bind","event","preventDefault","target","nodeName","console","log","_removeActiveTab","controlItem","add","_activeControlClass","paneId","_getPaneId","_setActivePane","_setActiveTab","control","querySelectorAll","_activeTabIdx","currentActiveControlItem","remove","_removeActivePane","_getPaneById","_activePaneClass","slice","id","constructor","rootSelector","activeControlClass","activePaneClass","activeTab","openModalBtn","closeModalBtn","modal","toggleModal","refs2","openModalBtn2","closeModalBtn2","modal2","toggleModal2"],"version":3,"file":"accessories.20b75e2b.js.map"}